# Generated by Django 5.2.1 on 2025-06-01 07:56

import dashboard.models.semester
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Degree',
            fields=[
                ('identifier', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='The name of this academic entity', max_length=255, validators=[django.core.validators.MinLengthValidator(2)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('degree_type', models.CharField(choices=[('BSC', 'Bachelor'), ('MSC', 'Master'), ('PHD', 'Promotion')], db_index=True, help_text='The type of degree (Bachelor, Master, PhD)', max_length=3)),
                ('description', models.TextField(blank=True, help_text='Detailed description of the degree program')),
            ],
            options={
                'verbose_name': 'degree',
                'verbose_name_plural': 'degrees',
                'ordering': ['degree_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('identifier', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='The name of this academic entity', max_length=255, validators=[django.core.validators.MinLengthValidator(2)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('description', models.TextField(blank=True, help_text='Detailed description of the course content')),
                ('ects', models.IntegerField(help_text='The number of ECTS credits for this course', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(30)])),
                ('degree', models.ForeignKey(help_text='The degree program this course belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='dashboard.degree')),
            ],
            options={
                'verbose_name': 'course',
                'verbose_name_plural': 'courses',
                'ordering': ['semester', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('identifier', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='The name of this academic entity', max_length=255, validators=[django.core.validators.MinLengthValidator(2)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('exam_type', models.CharField(choices=[('WB', 'Advanced workbook'), ('PO', 'Portfolio'), ('RE', 'Projektbericht'), ('WE', 'Schriftliche Prüfung'), ('PR', 'Präsentation'), ('CS', 'Fallstudie'), ('TH', 'Abschlussarbeit')], db_index=True, help_text='The type of examination', max_length=2)),
                ('course', models.ForeignKey(help_text='The course this exam is for', on_delete=django.db.models.deletion.CASCADE, related_name='exams', to='dashboard.course')),
                ('degree', models.ForeignKey(help_text='The degree program this exam belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='exams', to='dashboard.degree')),
            ],
            options={
                'verbose_name': 'exam',
                'verbose_name_plural': 'exams',
                'ordering': ['semester', 'course', 'exam_type'],
            },
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.DecimalField(blank=True, decimal_places=2, help_text="The student's score for this exam (0.0 to 100.0)", max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
                ('status', models.CharField(choices=[('AVL', 'Available'), ('ENR', 'Enrolled'), ('CMP', 'Completed'), ('FAL', 'Failed')], db_index=True, help_text='The current status of this enrollment', max_length=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(help_text='The course the student is enrolled in', on_delete=django.db.models.deletion.CASCADE, related_name='student_module_exam_mappings', to='dashboard.course')),
                ('exam', models.ForeignKey(help_text='The exam associated with this enrollment', on_delete=django.db.models.deletion.CASCADE, related_name='student_module_exam_mappings', to='dashboard.exam')),
            ],
            options={
                'verbose_name': 'enrollment',
                'verbose_name_plural': 'enrollment',
                'ordering': ['student', 'course'],
            },
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('identifier', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='The name of this academic entity', max_length=255, validators=[django.core.validators.MinLengthValidator(2)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('year', models.IntegerField(db_index=True, help_text='The academic year of this semester', validators=[dashboard.models.semester.validate_year])),
                ('start_date', models.DateField(help_text='The start date of this semester')),
                ('end_date', models.DateField(help_text='The end date of this semester')),
                ('degree', models.ForeignKey(help_text='The degree program this semester belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='semesters', to='dashboard.degree')),
            ],
            options={
                'verbose_name': 'semester',
                'verbose_name_plural': 'semesters',
                'ordering': ['-year', 'start_date'],
            },
        ),
        migrations.AddField(
            model_name='exam',
            name='semester',
            field=models.ForeignKey(help_text='The semester in which this exam is offered', on_delete=django.db.models.deletion.CASCADE, related_name='exams', to='dashboard.semester'),
        ),
        migrations.AddField(
            model_name='course',
            name='semester',
            field=models.ForeignKey(help_text='The semester in which this course is offered', on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='dashboard.semester'),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('identifier', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='The name of this academic entity', max_length=255, validators=[django.core.validators.MinLengthValidator(2)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('first_name', models.TextField(max_length=100, verbose_name='first name')),
                ('last_name', models.TextField(max_length=100, verbose_name='last name')),
                ('email', models.EmailField(max_length=100, verbose_name='email')),
                ('time_model', models.IntegerField(choices=[(36, 'Full-time'), (48, 'Part-time-1'), (72, 'Part-time-2')], default=36, verbose_name='time model')),
                ('started_on', models.DateTimeField(verbose_name='joined on')),
                ('courses', models.ManyToManyField(help_text='The courses this student is enrolled in', related_name='students', through='dashboard.Enrollment', to='dashboard.course')),
                ('degree', models.ForeignKey(help_text='The degree program this student is enrolled in', on_delete=django.db.models.deletion.CASCADE, related_name='students', to='dashboard.degree')),
                ('semester', models.ForeignKey(help_text='The current semester of this student', on_delete=django.db.models.deletion.CASCADE, related_name='students', to='dashboard.semester')),
            ],
            options={
                'verbose_name': 'student',
                'verbose_name_plural': 'students',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='enrollment',
            name='student',
            field=models.ForeignKey(help_text='The student enrolled in the course', on_delete=django.db.models.deletion.CASCADE, related_name='student_module_exam_mappings', to='dashboard.student'),
        ),
        migrations.AddConstraint(
            model_name='semester',
            constraint=models.CheckConstraint(condition=models.Q(('start_date__lt', models.F('end_date'))), name='start_date_before_end_date'),
        ),
        migrations.AddIndex(
            model_name='exam',
            index=models.Index(fields=['course', 'exam_type'], name='dashboard_e_course__1b60aa_idx'),
        ),
        migrations.AddIndex(
            model_name='course',
            index=models.Index(fields=['degree', 'semester'], name='dashboard_c_degree__a65633_idx'),
        ),
        migrations.AddIndex(
            model_name='student',
            index=models.Index(fields=['degree', 'semester'], name='dashboard_s_degree__b365da_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='enrollment',
            unique_together={('student', 'course', 'exam')},
        ),
    ]
