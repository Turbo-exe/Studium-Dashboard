"""
Django settings for a studiumDashboard project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
import logging
import os.path
from pathlib import Path

from django.core.management.utils import get_random_secret_key
from django_components import ComponentsSettings

BASE_DIR = str(Path(__file__).resolve().parent.parent)

SECRET_KEY = get_random_secret_key()    # ToDo: Use environment variable instead; Not applicable for prototype

DEBUG = True                # ToDo: Change to False; Not applicable for prototype
CSRF_COOKIE_SECURE=False    # ToDo: Change to secure setting; Not applicable for prototype
SECURE_SSL_REDIRECT=False   # ToDo: Change to secure setting; Not applicable for prototype

ALLOWED_HOSTS = [
    "localhost",
    "127.0.0.1",
]

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_components',
    'django_tables2',
    'django_filters',
    'dashboard'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    "django_components.middleware.ComponentDependencyMiddleware",
]

ROOT_URLCONF = 'dashboard.urls'

COMPONENTS = ComponentsSettings(
    dirs=[
        os.path.join(BASE_DIR, "dashboard/components"),
    ]
)

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, "dashboard")
        ],
        'OPTIONS': {
            'loaders': [(
                'django.template.loaders.cached.Loader', [
                'django.template.loaders.filesystem.Loader',
                'django.template.loaders.app_directories.Loader',
                'django_components.template_loader.Loader',
            ]
            )],
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
            'builtins': [
                'django_components.templatetags.component_tags'
            ]
        }
    },
]

WSGI_APPLICATION = 'dashboard.wsgi.application'

# Database
sqlite_path = os.environ.get("SQLITE_PATH")
if not sqlite_path:
    logging.critical("No SQLite path provided. Please set the SQLITE_PATH environment variable. "
                     "Refer to the README ('Installation -> From source') for instructions. Exiting...")
    exit(1)
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(sqlite_path, 'db.sqlite3'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Available languages for the application
LANGUAGES = [
    ('en', 'English'),
    ('de', 'German'),
]

# Path to the translation files
LOCALE_PATHS = [
    os.path.join(BASE_DIR, 'locale'),
]

TIME_ZONE = 'Europe/Berlin'
USE_I18N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "/static/"
STATIC_ROOT = os.path.join(BASE_DIR, "dashboard/static")
STATICFILES_FINDERS = [
    # Default finders
    "django.contrib.staticfiles.finders.FileSystemFinder",
    "django.contrib.staticfiles.finders.AppDirectoriesFinder",
    # Django components
    "django_components.finders.ComponentsFileSystemFinder",
]

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "dashboard/static/styles"),
    os.path.join(BASE_DIR, "dashboard/static/images")
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
